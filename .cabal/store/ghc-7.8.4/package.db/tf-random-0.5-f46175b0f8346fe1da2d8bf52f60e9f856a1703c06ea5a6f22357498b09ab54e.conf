name: tf-random
version: 0.5
id: tf-random-0.5-f46175b0f8346fe1da2d8bf52f60e9f856a1703c06ea5a6f22357498b09ab54e
key: tf-random-0.5
license: BSD3
maintainer: Michał Pałka <michal.palka@chalmers.se>
synopsis: High-quality splittable pseudorandom number generator
description:
    This package contains an implementation of a high-quality splittable pseudorandom number generator. The generator is based on a cryptographic hash function built on top of the ThreeFish block cipher. See the paper /Splittable Pseudorandom Number Generators Using Cryptographic Hashing/ by Claessen, Pałka for details and the rationale of the design.
    .
    The package provides the following:
    .
    * A splittable PRNG that implements the standard 'System.Random.RandomGen' class.
    .
    * The generator also implements an alternative version of the 'System.Random.TF.Gen.RandomGen' class (exported from "System.Random.TF.Gen"), which requires the generator to return pseudorandom integers from the full 32-bit range, and contains an n-way split function.
    .
    * An alternative version of the @Random@ class is provided, which is linked to the new @RandomGen@ class, together with @Random@ instances for some integral types.
    .
    * Two functions for initialising the generator with a non-deterministic seed: one using the system time, and one using the @\/dev\/urandom@ UNIX special file.
    .
    The package uses an adapted version of the reference C implementation of ThreeFish from the reference package of the Skein hash function (<https://www.schneier.com/skein.html>), originally written by Doug Whiting.
    .
    Please note that even though the generator provides very high-quality pseudorandom numbers, it has not been designed with cryptographic applications in mind.
category: Random
author: Michał Pałka <michal.palka@chalmers.se>
exposed: True
exposed-modules:
    System.Random.TF System.Random.TF.Gen System.Random.TF.Init
    System.Random.TF.Instances
abi: 31205abbcdc75c729f35519ccbc23343
trusted: False
import-dirs: /Users/travis/.cabal/store/ghc-7.8.4/tf-random-0.5-f46175b0f8346fe1da2d8bf52f60e9f856a1703c06ea5a6f22357498b09ab54e/lib
library-dirs: /Users/travis/.cabal/store/ghc-7.8.4/tf-random-0.5-f46175b0f8346fe1da2d8bf52f60e9f856a1703c06ea5a6f22357498b09ab54e/lib
data-dir: /Users/travis/.cabal/store/ghc-7.8.4/tf-random-0.5-f46175b0f8346fe1da2d8bf52f60e9f856a1703c06ea5a6f22357498b09ab54e/share
hs-libraries: HStf-random-0.5-f46175b0f8346fe1da2d8bf52f60e9f856a1703c06ea5a6f22357498b09ab54e
depends:
    base-4.7.0.2-918c7ac27f65a87103264a9f51652d63
    primitive-0.6.2.0-1ea54edac95d837242caecb55058af39bcff9769afbe308ce4197c0d2ec3c4d2
    random-1.1-9abec3cbd77e242d4aa6a561e904784cdc6a9be8bef9bc277a435dd6d9f796e1
    time-1.4.2-192d26f44a2c945780bbb921626c3399
haddock-interfaces: /Users/travis/.cabal/store/ghc-7.8.4/tf-random-0.5-f46175b0f8346fe1da2d8bf52f60e9f856a1703c06ea5a6f22357498b09ab54e/share/doc/html/tf-random.haddock
haddock-html: /Users/travis/.cabal/store/ghc-7.8.4/tf-random-0.5-f46175b0f8346fe1da2d8bf52f60e9f856a1703c06ea5a6f22357498b09ab54e/share/doc/html
